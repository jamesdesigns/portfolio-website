[{"/Users/jameshooper/Desktop/PERSONAL/WebProjects/portfolio-website/src/index.js":"1","/Users/jameshooper/Desktop/PERSONAL/WebProjects/portfolio-website/src/App.js":"2","/Users/jameshooper/Desktop/PERSONAL/WebProjects/portfolio-website/src/components/Navbar.js":"3","/Users/jameshooper/Desktop/PERSONAL/WebProjects/portfolio-website/src/components/Button.js":"4","/Users/jameshooper/Desktop/PERSONAL/WebProjects/portfolio-website/src/components/pages/Home.js":"5","/Users/jameshooper/Desktop/PERSONAL/WebProjects/portfolio-website/src/components/HeroSection.js":"6","/Users/jameshooper/Desktop/PERSONAL/WebProjects/portfolio-website/src/components/Cards.js":"7","/Users/jameshooper/Desktop/PERSONAL/WebProjects/portfolio-website/src/components/CardItem.js":"8"},{"size":150,"mtime":1612312294629,"results":"9","hashOfConfig":"10"},{"size":416,"mtime":1612386739977,"results":"11","hashOfConfig":"10"},{"size":2117,"mtime":1612388695012,"results":"12","hashOfConfig":"10"},{"size":728,"mtime":1612383548601,"results":"13","hashOfConfig":"10"},{"size":230,"mtime":1612484554591,"results":"14","hashOfConfig":"10"},{"size":710,"mtime":1612387560365,"results":"15","hashOfConfig":"10"},{"size":1647,"mtime":1612590116641,"results":"16","hashOfConfig":"10"},{"size":590,"mtime":1612485258892,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"19vlywr",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/Users/jameshooper/Desktop/PERSONAL/WebProjects/portfolio-website/src/index.js",[],["38","39"],"/Users/jameshooper/Desktop/PERSONAL/WebProjects/portfolio-website/src/App.js",[],"/Users/jameshooper/Desktop/PERSONAL/WebProjects/portfolio-website/src/components/Navbar.js",[],"/Users/jameshooper/Desktop/PERSONAL/WebProjects/portfolio-website/src/components/Button.js",["40"],"import React from 'react'\nimport './Button.css'\nimport { Link } from 'react-router-dom'\n\nconst STYLES = ['btn--primary','btn--outline']\nconst SIZES = ['btn--medium', 'btn--large']\n\nexport const Button = ({\n  children, \n  type, \n  onClick, \n  buttonStyle, \n  buttonSize\n}) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle) \n    ? buttonStyle \n    : STYLES[0];\n\n    const checkButtonSize = SIZES.includes(buttonSize)\n    ? buttonSize\n    : SIZES[0];\n\n    return (\n      <Link to=\"sign-up\" className=\"btn-mobile\">\n        <button\n          className={`btn ${checkButtonStyle} ${checkButtonStyle}`}\n          onClick={onClick}\n          type={type}\n        >\n          {children}\n        </button>\n      </Link>\n    )\n};\n","/Users/jameshooper/Desktop/PERSONAL/WebProjects/portfolio-website/src/components/pages/Home.js",[],"/Users/jameshooper/Desktop/PERSONAL/WebProjects/portfolio-website/src/components/HeroSection.js",["41"],"import React from 'react'\nimport '../App.css'\nimport { Button } from './Button'\nimport HeroSection from './HeroSection.css'\n\nfunction Hero() {\n  return (\n    <div className=\"hero-container\">\n      <video src=\"/videos/video-2.mp4\" autoPlay loop muted />\n      <h1>HIRE ME.</h1>\n      <p>I design websites and logos for small businesses.</p>\n      <div className=\"hero-btns\">\n        <Button className=\"btns\" buttonStyle=\"btn--outline\" buttonSize=\"btn--large\">\n          HIRE ME\n        </Button>\n        <Button className=\"btns\" buttonStyle=\"btn--primary\" buttonSize=\"btn--large\">\n          WATCH TRAILER <i className=\"far fa-play-circle\" />\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport default Hero\n","/Users/jameshooper/Desktop/PERSONAL/WebProjects/portfolio-website/src/components/Cards.js",[],"/Users/jameshooper/Desktop/PERSONAL/WebProjects/portfolio-website/src/components/CardItem.js",["42"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction CardItem(props) {\n  return (\n    <>\n      <li className=\"cards__item\">\n        <Link className=\"cards__item__link\" to={props.path}>\n          <figure className=\"cards__item__pic-wrap\" data-category={props.label}>\n            <img src={props.src} alt=\"Portfolio Image\" className=\"cards__item__img\" />\n          </figure>\n          <div className=\"cards__item__info\">\n            <h5 className=\"cards__item__text\">{props.text}</h5>\n          </div>\n        </Link>\n      </li>\n    </>\n  )\n}\n\nexport default CardItem\n",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":19,"column":11,"nodeType":"49","messageId":"50","endLine":19,"endColumn":26},{"ruleId":"47","severity":1,"message":"51","line":4,"column":8,"nodeType":"49","messageId":"50","endLine":4,"endColumn":19},{"ruleId":"52","severity":1,"message":"53","line":10,"column":13,"nodeType":"54","endLine":10,"endColumn":87},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'checkButtonSize' is assigned a value but never used.","Identifier","unusedVar","'HeroSection' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]